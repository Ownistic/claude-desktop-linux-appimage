name: Build and Release AppImage

on:
  push:
    tags:
      - 'v*'
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            patchy-cnb/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('patchy-cnb/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Node.js dependencies
        working-directory: ./patchy-cnb
        run: |
          # Install dependencies with npm without creating package-lock.json
          npm install --no-package-lock

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            p7zip-full \
            libfuse2 \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            librsvg2-dev \
            imagemagick \
            icoutils \
            appstream \
            wget \
            curl \
            build-essential
          
          # Install asar globally via npm
          sudo npm install -g asar
          
          # Install electron globally via npm
          sudo npm install -g electron

      - name: Download AppImageTool
        run: |
          wget -q https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O /tmp/appimagetool
          chmod +x /tmp/appimagetool
          sudo mv /tmp/appimagetool /usr/local/bin/appimagetool

      - name: Build AppImage
        run: |
          ./build-appimage.sh

      - name: Upload AppImage as artifact
        uses: actions/upload-artifact@v4
        with:
          name: claude-desktop-appimage
          path: appimage-output/Claude-*.AppImage

      - name: Upload AppImage to Release
        if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: appimage-output/Claude-*.AppImage
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
